force: true
goimports: goimports
file-prefix: |
  This file was generated by running `go-mockgen` at the root of this repository.
  To add additional mocks to this or another package, add a new entry to the
  mockgen.yaml file in the root of this repository.
mocks:
  # To generate a new mock struct from an interface definition, add a new value to this
  # list. Each item will need to supply two pieces of information:
  #
  #  (1) First, you will need to give a target filename
  #  (2) Second, you will need to supply a target import path and interface name. If the
  #      set of interface definitions you are mocking are all from the same package, then
  #      you can supply a `path` and `interfaces` key which take a string and string array,
  #      respectively. If the set of interface definitions you are mocking come from multiple
  #      import paths, you can supply a `sources` array, each item containing a `path` and
  #      `interfaces` key.
  #
  # By convention, you should generate mocks next to the CONSUMER of an interface, not the
  # definition. It is NOT considered an anti-pattern to generate multiple mocks for the same
  # shared interface.
  #
  # By convention, the filename containing generated mocks should be `mocks_test.go`.
  - filename: internal/db/mocks_test.go
    sources:
      - path: gogs.io/gogs/internal/db
        interfaces:
          - LoginSourcesStore
          - LoginSourceFilesStore
          - LoginSourceFileStore
          - loginSourceFileStore
      - path: gogs.io/gogs/internal/auth
        interfaces:
          - Provider
  - filename: internal/route/lfs/mocks_test.go
    sources:
      - path: gogs.io/gogs/internal/db
        interfaces:
          - LFSStore
          - UsersStore
          - TwoFactorsStore
          - AccessTokensStore
          - ReposStore
          - PermsStore
